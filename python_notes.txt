
Skills & Understanding: 

"Functions" Are a re-usable subscript within your script 
			You can give it inputs (parameters, arugments)
			You can receive an output (return value) 
Example: 
def sum3(x,y,z)
	return x+y+z			
# x,y,z are all variables of the function the input

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


You can open any other program in the computer while working in Python on the terminal 
 Type in: "import subprocess" in the command line, then whatever you want to open 


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


SPLIT! 
.join(['here','are','some','words','already','split'])

#This will add 5 a's in between every split!
('a' *5).join(['here','are','some','words','already','split'])


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -



"Boolean" true & false is important to understand. 


print 'Hello,' , name 
    name = Christa 
print  'You look about' , age    
    age = 20 


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


"For Loops:"  for i in xrange(10): print 'hello'
# This will print hello 10 times in the terminal 

"While loop" while i in xrange(true): print 'hello'
# This will print hello infinitely until I interrupt it with Ctrl + C


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


range(10) #will give you:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
L=_ #will take the very last item in the list, 9 

L[:] #will print the numbers by step one every time (every number) 
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]

l[::2] #will print numbers by two steps, (even numbers)
[0, 2, 4, 6, 8]

len(L) #will tell you how many numbers there are

L = [5, 17, 1, 2, 40, 32, 33, 70]
sorted(L) #will sort them by increasing size
[1, 2, 5, 17, 32, 33, 40, 70]


 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Fibonaaci sequence:

startNumber = int(raw_input("Enter the start number here "))
endNumber = int(raw_input("Enter the end number here "))

def fib(n):
    if n < 2:
        return n
    return fib(n-2) + fib(n-1)

print map(fib, range(startNumber, endNumber))



- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


#Finding odd or even numbers 

def is_even(x):
	if x % 2 == 0: 
				print 'this number is even'
	else: 
				print 'this number is odd'	
	
	
def is_even(x):
	if x % 2 == 0: return True
	else: return False
			

















- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

TIC TAC TOE: 

>>> board = [[' ',' ',' '],[' ',' ',' '],[' ',' ',' ']]
>>> print board
[[' ',' ',' '],[' ',' ',' '],[' ',' ',' ']]
>>> import pprint
>>> pprint.pprint board
[[' ',' ',' '],[' ',' ',' '],[' ',' ',' ']]
>>> def draw_board(board):
	'for row in board'
	
draw_row(row)
print '|'.join(row)    #(['x','o',' '])	
>>> board 
[[' ',' ',' '],[' ',' ',' '],[' ',' ',' ']]
>>> board[0] 
[[' ',' ',' ']
>>> board[0][0]
[[' ',' ',' '], [[' ',' ',' ']
board[0][0] = x
board 
[['x',' ',' '],[' ',' ',' '],[' ',' ',' ']]
draw_board(board)

def turn(player, row, col):
	print "It's", player + "'s turn!"
	row = raw_input('which row? ')
	col = 
	